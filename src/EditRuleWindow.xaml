// Copyright (c) 2025 Deminimis
// Licensed under the GNU AGPL v3.

<Window x:Class="MinimalFirewall.EditRuleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MinimalFirewall"
        mc:Ignorable="d"
        Title="Edit Rule" 
        Width="450"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        MaxHeight="600"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent">

    <Window.Resources>
        <Style x:Key="CaptionButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource App.Text.Default}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Name="border">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource CaptionButton.Background.MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource CaptionButtonStyle}" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border BorderBrush="{DynamicResource App.Border.Default}" BorderThickness="1" Background="{DynamicResource App.Window.Background}">
        <DockPanel>
            <Border DockPanel.Dock="Top" Background="{DynamicResource TitleBar.Background.Default}" BorderBrush="{DynamicResource App.Border.Default}" BorderThickness="0,0,0,1" Height="30" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid>
                    <TextBlock Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="{DynamicResource App.Text.Default}"/>
                    <Button Content="✕" Style="{StaticResource CloseButtonStyle}" Height="30" HorizontalAlignment="Right" Click="CloseButton_Click" />
                </Grid>
            </Border>

            <Grid Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock x:Name="AppNameTextBlock" Grid.Row="0" FontWeight="Bold" FontSize="14" TextWrapping="Wrap"
                           Text="Editing rule for:" Foreground="{DynamicResource App.Text.Default}"/>

                <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="0,15,0,0">
                    <RadioButton x:Name="AllowAllRadio" Content="Allow (All)" IsChecked="True" FontSize="14" Margin="0,5"/>
                    <RadioButton x:Name="AllowOutboundRadio" Content="Allow (Outbound)" FontSize="14" Margin="0,5"/>
                    <RadioButton x:Name="AllowInboundRadio" Content="Allow (Inbound)" FontSize="14" Margin="0,5"/>
                    <Separator Margin="0,10"/>
                    <RadioButton x:Name="BlockAllRadio" Content="Block (All)" FontSize="14" Margin="0,5"/>
                    <RadioButton x:Name="BlockOutboundRadio" Content="Block (Outbound)" FontSize="14" Margin="0,5"/>
                    <RadioButton x:Name="BlockInboundRadio" Content="Block (Inbound)" FontSize="14" Margin="0,5"/>
                </StackPanel>

                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                    <Button Content="OK" Width="80" Margin="5" Click="OkButton_Click" IsDefault="True"/>
                    <Button Content="Cancel" Width="80" Margin="5" IsCancel="True"/>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Border>
</Window>